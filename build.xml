<?xml version="1.0" encoding="UTF-8"?>

<project name="statisten" default="build" basedir=".">
  <!-- Clone https://github.com/raphaelstolt/phploc-phing.git and set the value to the location -->
  <property name="phploc.dir" value="/Users/kasper/Documents/Code/phploc-phing/" />
  <!-- Clone https://github.com/ericduran/drupalcs.git and set the value to the location -->
  <property name="phpcs.standard" value="/Users/kasper/Documents/Code/drupalcs/ruleset.xml" />



  <!-- Add the custom phploc task -->
  <taskdef name="phploc" classname="PHPLocTask" classpath="${phploc.dir}" />

  <property name="project.sitesdir" value="${project.basedir}/sites/all" />
  
  <!-- Define pattern sets for future reference -->
  <patternset id="php">
    <include name="**/*.php" />
    <include name="**/*.inc" />
  </patternset>

  <patternset id="js">
    <include name="**/*.js" />
    <exclude name="**/*.min.js" />  
  </patternset>

  <patternset id="contrib">
    <exclude name="**/contrib/**/*.*" />
    <exclude name="**/libraries/**/*.*" />
  </patternset>

  <patternset id="generated">
    <exclude name="**/*.features.*" />
    <exclude name="**/*.pages_default.inc" />
    <exclude name="**/*.strongarm.inc" />
  </patternset>
  
  <!-- Define file sets for future reference -->
  <fileset  id="src.php" dir="${project.basedir}">
    <include name="**/*.php" />
    <include name="**/*.inc" />
  </fileset>

  <fileset dir="${project.sitesdir}" id="src.php.custom">
    <patternset refid="php"/>
    <patternset refid="contrib"/>
    <patternset refid="generated"/>
  </fileset>
  
  <fileset dir="${project.basedir}" id="src.js">
    <patternset refid="js" />
  </fileset>

  <fileset dir="${project.sitesdir}" id="src.js.custom">
    <patternset refid="js" />
    <patternset refid="contrib" />
  </fileset>
  
  <target name="clean"
          description="Clean up and create artifact directories">
    <delete dir="${project.basedir}/build/api"/>
    <delete dir="${project.basedir}/build/code-browser"/>
    <delete dir="${project.basedir}/build/coverage"/>
    <delete dir="${project.basedir}/build/logs"/>
    <delete dir="${project.basedir}/build/pdepend"/>

    <mkdir dir="${project.basedir}/build/api"/>
    <mkdir dir="${project.basedir}/build/code-browser"/>
    <mkdir dir="${project.basedir}/build/coverage"/>
    <mkdir dir="${project.basedir}/build/logs"/>
    <mkdir dir="${project.basedir}/build/pdepend"/>
  </target>

  <target name="checkphp"
          description="Check all PHP files for syntax errors using PHPLint">
    <phplint>
      <fileset refid="src.php" />
    </phplint>
  </target>

  <target name="checkcustomphp"
          description="Check custom PHP files for syntax errors using PHPLint">
    <phplint>
      <fileset refid="src.php.custom" />
    </phplint>
  </target>

  <target name="checkjs"
          description="Check all Javascript files using JSlint">
    <jsllint haltonfailure="true" showwarnings="true" tofile="${project.basedir}/build/logs/jslint.txt">
      <fileset refid="src.js" />
    </jsllint>
  </target>

  <target name="checkcustomjs"
          description="Check custom Javascript files using JSlint">
    <jsllint haltonfailure="true" showwarnings="true" tofile="${project.basedir}/build/logs/jslint.txt">
      <fileset refid="src.js.custom" />
    </jsllint>
  </target>


  <target name="phpunit"
          description="Run unit tests using PHPUnit and generates junit.xml and clover.xml">
    <!--<phpunit codecoverage="true">-->
    <phpunit>
      <formatter type="xml" />
    </phpunit>
  </target>

  <target name="pdepend"
          description="Generate jdepend.xml and software metrics charts using PHP_Depend">
    <phpdepend>
      <fileset refid="src.php.custom" />
      <logger type="jdepend-xml" outfile="${project.basedir}/build/logs/jdepend.xml"/>
      <logger type="jdepend-chart" outfile="${project.basedir}/build/pdepend/dependencies.svg"/>
      <logger type="overview-pyramid" outfile="${project.basedir}/build/pdepend/overview-pyramid.svg"/>
    </phpdepend>
  </target>

  <target name="phpmd"
          description="Generate pmd.xml using PHPMD">
    <phpmd>
      <fileset refid="src.php.custom" />
      <formatter type="xml" outfile="${project.basedir}/build/logs/pmd.xml"/>
    </phpmd>
  </target>

  <target name="phpcpd"
          description="Generate pmd-cpd.xml using PHPCPD">
    <phpcpd>
      <fileset refid="src.php.custom" />
      <formatter type="pmd" outfile="${project.basedir}/build/logs/pmd-cpd.xml"/>
    </phpcpd>
  </target>
  
  <target name="phploc"
          description="Generate phploc.csv using PHPLOC">
    <tstamp>
      <format property="check.date.time" pattern="%Y%m%d-%H%M%S" locale="en_US"/>
    </tstamp>
    <phploc reportType="csv" 
            reportName="phploc" 
            reportDirectory="${project.basedir}/build/logs/" countTests="true">
      <fileset refid="src.php.custom"/>
    </phploc>
  </target>

  <!-- There is no Phing task for PHP Codesniffer in v2.4.6. It's coming for v2.5.
       Execute while we wait.-->
  <target name="phpcs"
          description="Generate checkstyle.xml using PHP_CodeSniffer">
    <exec command="phpcs --report=checkstyle 
                         --report-file=${project.basedir}/build/logs/checkstyle.xml 
                         --standard=${phpcs.standard} 
                         --extensions=php,inc
                         --ignore=*/contrib/*,*/*.features.*,*/*.pages_default.*,*/*strongarm.inc
                         ${project.sitesdir}"       
          logoutput="true" />
  </target>

  <target name="phpdoc"
          description="Generate API documentation using PHPDocumentor">
    <phpdoc title="API Documentation"
            destdir="${project.basedir}/build/api"
            sourcecode="php"
            output="HTML:Smarty:PHP">
      <fileset refid="src.php" />
    </phpdoc>
  </target>

  <!-- There is no Phing task for PHP CodeBrowser so do a plain execute -->
  <target name="phpcb"
          description="Aggregate tool output with PHP_CodeBrowser">
    <exec command="phpcb  --log ${project.basedir}/build/logs 
                          --source ${project.basedir} 
                          --output ${project.basedir}/build/code-browser" 
          logoutput="true" />
  </target>

  <target name="analyze" depends="clean,
                                  checkcustomphp,
                                  checkcustomjs,
                                  phpunit,
                                  pdepend,
                                  phpmd,
                                  phpcpd,
                                  phpcs,
                                  phploc"/>


  <target name="build" depends="analyze,
                                phpdoc,
                                phpcb"/>

</project>
